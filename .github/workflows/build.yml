name: Build

on:
  pull_request:
    paths:
      - 'dotfiles_manager/**'

  push:
    branches:
      - 'master'

jobs:
  build:
    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            dotfiles_manager

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build
        working-directory: dotfiles_manager
        run: cargo build --release --target ${{ matrix.target }}

      - name: Try Activate
        working-directory: dotfiles_manager
        run: |
          ./target/${{ matrix.target }}/release/dotfiles_manager activate | source /dev/stdin

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}-binary
          path: dotfiles_manager/target/${{ matrix.target }}/release/dotfiles_manager
